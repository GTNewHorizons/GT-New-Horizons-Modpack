# Configuration file

##########################################################################################################
# entity items
#--------------------------------------------------------------------------------------------------------#
# Entity items. (Armor stand, boat, etc)
##########################################################################################################

"entity items" {
    #  [default: true]
    B:enableArmorStand=true

    # New boats from 1.9+, including the new rowing sounds. All vanilla wood variants included. [default: true]
    B:enableNewBoats=true

    # What entities shouldn't be able to sit in the boat? This is ONLY for new boats. You can either provide an entity ID (modid.entityid, for vanilla entities type just entity ID), or search for a string in the classpath (classpath:stringtofind).
    # Separate entries in the list by a new line. Note that players can always sit even if blacklisted, and some entities, like horses, water mobs or nonliving entities, will never be allowed to sit in boats.
    # It's a little hard to explain, a more detailed explanation and list of examples can be found here: https://gist.github.com/Roadhog360/0a9975d113217e65cc6b06c494454e4f
    S:newBoatEntityBlacklist <
     >

    # Treat the entity blacklist as a whitelist, ONLY entities matching that criteria will be allowed. [default: false]
    B:newBoatEntityBlacklistAsWhitelist=false

    # The maximum speed a boat can travel by while on land. This option exists because boats are very very fast when travelling on slippery blocks. Land speed = 0.6, Regular/Packed Ice Speed = 0.98, Packed Ice Speed = 0.986. Anything smaller than 0.6 is really, REALLY slow on land.
    # The speed values are just block slipperiness values, and are averaged by the slippery blocks around the bottom of the boat. This option does nothing to old boats. [range: 0.1 ~ 1.0, default: 0.986]
    S:newBoatMaxLandSpeed=0.986

    # If disabled, only one person can sit in the new boat at a time. The new seat is actually an invisible entity that follows new boats. [default: true]
    B:newBoatPassengerSeat=true

    # The speed multiplier for boats while in water. Use this if you want to make the boats faster or slower. 1 = no speed change [range: 0.1 ~ 2.0, default: 1.0]
    S:newBoatSpeed=1.0

    # If true, old boats will be replaced with the new oak boat and the item sprite will also be changned. False means the new and old boat and item for it exists separately, and the new boats will use a wooden shovel in their crafting recipe. If this is enabled, a boat that has an entity in it will not be replaced until the entity gets out.
    # THIS WILL NOT WORK PROPERLY WITH BETTER BOATS INSTALLED [default: true]
    B:replaceOldBoats=true
}


##########################################################################################################
# equipment
#--------------------------------------------------------------------------------------------------------#
# Tools, armor, and other equipment items.
##########################################################################################################

equipment {
    # Used by the game to generate the durability value for the armor set. The higher the better. [range: 1 ~ 2147483647, default: 37]
    I:netheriteArmourDurabilityFactor=37

    # Override Netherite Axe Durability, -1 to use netheriteToolDurability [range: -1 ~ 2147483647, default: -1]
    I:netheriteAxeDurability=-1

    # Override Netherite Boots Durability, -1 for no override [range: -1 ~ 2147483647, default: -1]
    I:netheriteBootsDurability=-1

    # Netherite Boots Protection [range: 1 ~ 2147483647, default: 3]
    I:netheriteBootsProtection=3

    # Override Netherite Chestplate Durability, -1 for no override [range: -1 ~ 2147483647, default: -1]
    I:netheriteChestplateDurability=-1

    # Netherite Chestplate Protection [range: 1 ~ 2147483647, default: 8]
    I:netheriteChestplateProtection=8

    # Netherite base damage, Diamond is 3.0 [range: 0.0 ~ 3.4028235E38, default: 4.0]
    S:netheriteDamageBase=4.0

    #  [range: 1 ~ 2147483647, default: 15]
    I:netheriteEnchantability=15

    # Netherite harvest level, Diamond is 3 [range: 0 ~ 2147483647, default: 4]
    I:netheriteHarvestLevel=4

    # Override Netherite Helmet Durability, -1 to no override [range: -1 ~ 2147483647, default: -1]
    I:netheriteHelmetDurability=-1

    # Netherite Helmet Protection [range: 1 ~ 2147483647, default: 3]
    I:netheriteHelmetProtection=3

    # Override Netherite Hoe Durability, -1 to use netheriteToolDurability [range: -1 ~ 2147483647, default: -1]
    I:netheriteHoeDurability=-1

    # Override Netherite Leggings Durability, -1 for no override [range: -1 ~ 2147483647, default: -1]
    I:netheriteLeggingsDurability=-1

    # Netherite Leggings Protection [range: 1 ~ 2147483647, default: 6]
    I:netheriteLeggingsProtection=6

    # Override Netherite Pickaxe Durability, -1 to use netheriteToolDurability [range: -1 ~ 2147483647, default: -1]
    I:netheritePickaxeDurability=-1

    # Override Netherite Shovel Durability, -1 to use netheriteToolDurability [range: -1 ~ 2147483647, default: -1]
    I:netheriteSpadeDurability=-1

    # Nethherite mining speed, Diamond is 8.0 [range: 0.1 ~ 3.4028235E38, default: 9.0]
    S:netheriteSpeed=9.0

    # Override Netherite Sword Durability, -1 to use netheriteToolDurability [range: -1 ~ 2147483647, default: -1]
    I:netheriteSwordDurability=-1

    #  [range: 1 ~ 2147483647, default: 2031]
    I:netheriteToolDurability=2031
}


##########################################################################################################
# function blocks
#--------------------------------------------------------------------------------------------------------#
# Blocks that have a specific function, whether right clicked or otherwise.
##########################################################################################################

"function blocks" {
    #  [default: true]
    B:enableBarrel=true

    # Will attempt to seek and auto-add recipes to itself. Look at ConfigFunctions.cfg "autoAddBlastFurance" for more info.
    # Compatible with CraftTweaker. In the same way that you'd use furnace.addRecipe or furnace.remove, you can use "mods.etfuturum.blastFurnace" instead of "furnace". [default: true]
    B:enableBlastFurnace=true

    # Currently DOES NOT HAVE ANY FUNCTIONALITY. Decoration ONLY! [default: true]
    B:enableCartographyTable=true

    # Allows certain items to be composted, which has a chance of adding a layer to the compost bin. Once full, bone meal may be harvested. It is compatible with CraftTweaker.
    # A value greater than 100 can add more than one layer to the composter. (The composter has 6 layers so max value is 600) EG 150 = 1 layer guaranteed and a 50% chance to fill another layer. And 600 = instantly fill the whole composter, or any remaining layers.
    # The mod prefix is "mods.etfuturum.composting", and the function is "addCompostable" and an ItemStack or OreDictionary tag, then an integer for how likely the item is to add a compost layer. 100 = 100%, or guaranteed. You can remove compostables using the "remove" function and an ItemStack or an OreDictionary tag.
    # You can use the "removeAll" function to remove all composting recipes, if you wanted to overhaul the composter's useage.
    # Examples:
    # mods.etfuturum.composting.addCompostable(<minecraft:planks:*>, 100); //(Makes all planks have a 100% chance to fill one layer.)
    # mods.etfuturum.composting.addCompostable(<minecraft:bedrock>, 150); //(Makes bedrock fill one layer and have a 50% chance to fill another layer.)
    # mods.etfuturum.composting.remove(<minecraft:leaves:*>); //(Removes all leaves as a compostable item)
    # 
    # Additionally the bone meal drop when harvesting a full composting bin can be changed. It drops one item from the "composting" loot table, and can be modified with CraftTweaker's "addChestLoot" function.
    # By default bone meal is the only item in this loot table, with a weight of 10. You can learn more about CraftTweaker loot table modification here: https://www.mcdrama.net/archiveformal/MineTweaker3/wiki/tutorials/1710/loot_and_seeds.html [default: true]
    B:enableComposter=false

    # Ability to craft differently colored beds out of wool. Mixed wool colors = red bed [default: true]
    B:enableDyedBeds=true

    # Currently DOES NOT HAVE ANY FUNCTIONALITY. Decoration ONLY! [default: true]
    B:enableFletchingTable=true

    # Inverted Daylight Sensor [default: true]
    B:enableInvertedSensor=true

    #  [default: true]
    B:enableIronTrapdoor=false

    # Allow lava buckets to fill cauldrons [default: true]
    B:enableLavaCauldrons=true

    # Currently DOES NOT HAVE ANY FUNCTIONALITY. Decoration ONLY! [default: true]
    B:enableLoom=true

    # Enables new anvil behavior, such as less expensive item renaming [default: true]
    B:enableNewAnvil=true

    # Beacon beam can be colored using stained glass [default: true]
    B:enableNewBeacon=true

    # Makes the brewing stand have a fuel slot like in 1.9+. The fuel slot is compatible with CraftTweaker and takes blaze powder by default. Blaze powder can brew 30 potion cycles.
    # The mod prefix is "mods.etfuturum.brewingFuel", and the function is "addFuel" and an ItemStack or OreDictionary tag, then an integer for how many brew cycles. (Any brewing, regardless of if 1 or all 3 slots are filled, is still one "cycle") You can remove fuels using the "remove" function and an ItemStack or an OreDictionary tag.
    # Examples:
    # mods.etfuturum.brewingFuel.addFuel(<minecraft:gunpowder>, 10); //(Makes gunpowder have 10 brewing cycles)
    # mods.etfuturum.brewingFuel.remove(<minecraft:blaze_powder>); //(Removes blaze powder as a brewing fuel) [default: true]
    B:enableNewBrewingStand=true

    # Enables variant doors for materials available in Minecraft after 1.7 [default: true]
    B:enableNewDoors=false

    # Uses lapis as payment and has enchant previews and adjusted level costs. Requires tile entity replacement to be enabled in "function.cfg". It is compatible with CraftTweaker for adding and removing fuels.
    # The mod prefix is "mods.etfuturum.enchantingFuel", and the function is "addFuel" and an ItemStack or OreDictionary tag. You can remove fuels using the "remove" function and an ItemStack or an OreDictionary tag.
    # Examples:
    # mods.etfuturum.enchantingFuel.addFuel(<etfuturum:amethyst_shard>); //(Adds amethyst shards as an enchanting fuel)
    # mods.etfuturum.enchantingFuel.remove(<minecraft:dye:4>); //(Removes lapis lazuli as an enchanting fuel) [default: true]
    B:enableNewEnchantingTable=true

    # Enables wood variant signs for materials available in Minecraft after 1.7 [default: true]
    B:enableNewSigns=true

    # Enables variant trapdoors for materials available in Minecraft after 1.7 [default: true]
    B:enableNewTrapdoors=true

    # Enables wood variant buttons and pressure plates for wood available in Minecraft after 1.7 [default: true]
    B:enableNewWoodRedstone=true

    # Enable the old Et Futurum daylight sensor block. Should be enabled if you still have the old Et Futurum copy of the non-inverted daylight detector that need to be converted. [default: false]
    B:enableOldBaseDaylightSensor=false

    # A port of potion cauldrons from Bedrock Edition. Used to make tipped arrows and store potions. [default: true]
    B:enablePotionCauldron=true

    # If Shulkers are disabled, a custom recipe will be required to obtain Shulker shells. [default: true]
    B:enableShulkerBoxes=true

    # Just bouncy, does not pull blocks. [default: true]
    B:enableSlimeBlock=true

    # If this is disabled, netherite items will not be craftable unless added by CraftTweaker. This introduces the smithing GUI from versions prior to 1.20. It is compatible with CraftTweaker.
    # The mod prefix is "mods.etfuturum.smithingTable", and the functions are "addRecipe" or "addRecipeNoNBT". "addRecipe" will copy all NBT data from the first slot to the output. (and damage if the first slot and output are damageable items) You can remove recipes using the "remove" function and an ItemStack.
    # Currently CraftTweaker support is limited, so some features from CraftTweaker may not work. .noReturn() and .anyDamage().onlyDamaged() are known to not work.
    # However anyDamage() by itself does work, and is required for tool inputs to actually copy their damage over to the output.
    # Examples:
    # mods.etfuturum.smithingTable.addRecipe(<IC2:itemToolBronzeSword>, <minecraft:iron_sword>.anyDamage(), <ore:ingotBronze>); //(Use "ingotBronze" on iron sword to convert it to a bronze sword)
    # mods.etfuturum.smithingTable.addRecipeNoNBT(<etfuturum:sponge:1>, <minecraft:sponge>, <minecraft:water_bucket>); //Take a vanilla sponge and a water bucket, you will get an Et Futurum Requiem wet sponge. [default: true]
    B:enableSmithingTable=true

    # Will attempt to seek and auto-add recipes to itself. Look at ConfigFunctions.cfg "autoAddSmoker" for more info.
    # Compatible with CraftTweaker. In the same way that you'd use furnace.addRecipe or furnace.remove, you can use "mods.etfuturum.smoker" instead of "furnace". [default: true]
    B:enableSmoker=true

    #  [default: true]
    B:enableSponge=true

    # Currently DOES NOT HAVE ANY FUNCTIONALITY. Decoration ONLY! [default: true]
    B:enableStonecutter=true

    # Enables target block from 1.16 [default: true]
    B:enableTarget=true

    # Enables variant doors for materials available natively in Minecraft 1.7 [default: true]
    B:enableVanillaDoors=false

    # Enables variant signs for materials available natively in Minecraft 1.7 [default: true]
    B:enableVanillaSigns=true

    # Enables variant trapdoors for materials available natively in Minecraft 1.7 [default: true]
    B:enableVanillaTrapdoors=false

    # Enables wood variant buttons and pressure plates for wood available natively in Minecraft 1.7 [default: true]
    B:enableVanillaWoodRedstone=true
}


##########################################################################################################
# misc blocks
#--------------------------------------------------------------------------------------------------------#
# Blocks that don't fit in any other category.
##########################################################################################################

"misc blocks" {
    #  [default: true]
    B:enableBanners=true

    # Enables log blocks with bark on all sides [default: true]
    B:enableBarkLogs=true

    # A solid, indestructible and invisible block. Can be seen when holding it in Creative mode. [default: true]
    B:enableBarrier=true

    # This must be on for the basalt deltas biome to generate unless Netherlicious is installed. [default: true]
    B:enableBlackstone=true

    #  [default: true]
    B:enableChain=true

    #  [default: true]
    B:enableConcrete=false

    # Copper sub-blocks and items. Disable copper but keep this on if you want the new copper items and blocks made of it, without the main ingot, ore or copper block itself. [default: true]
    B:enableCopperSubItems=true

    # Slabs for vanilla blocks: stone, mossy stone brick, mossy cobble, cut sandstone [default: true]
    B:enableExtraVanillaSlabs=true

    # Stairs for vanilla blocks: stone, mossy stone brick, mossy cobble [default: true]
    B:enableExtraVanillaStairs=true

    # Stairs for vanilla blocks: stone brick, mossy stone brick, sandstone, brick, nether brick [default: true]
    B:enableExtraVanillaWalls=true

    #  [default: true]
    B:enableGlazedTerracotta=true

    # Enables honey blocks, honeycomb blocks, honeycombs, and honey bottles. See entities.cfg for toggling bee nests, beehives, and bees. [default: true]
    B:enableHoney=true

    #  [default: true]
    B:enableLantern=true

    # Invisible light blocks. Only has a selection box when held, right click to change light level. Otherwise functionally identical to air and can be replaced by placing blocks into it. Invisible, but can be seen when holding it in Creative mode. [default: true]
    B:enableLightBlock=true

    # Enables variant fences for materials available in Minecraft after 1.7 [default: true]
    B:enableNewFences=false

    # Enables variant gates for materials available in Minecraft after 1.7 [default: true]
    B:enableNewGates=false

    #  [default: true]
    B:enableQuartzBricks=true

    # Note: Also enables cracked and chiseled nether bricks as they use this ID too [default: true]
    B:enableRedNetherBricks=true

    #  [default: true]
    B:enableSmoothQuartz=true

    #  [default: true]
    B:enableSmoothSandStone=false

    #  [default: true]
    B:enableSmoothStone=true

    # Enables stripped log blocks [default: true]
    B:enableStrippedLogs=true

    # Enables variant fences for materials available natively in Minecraft 1.7 [default: true]
    B:enableVanillaFences=false

    # Enablesvariant gates for materials available natively in Minecraft 1.7 [default: true]
    B:enableVanillaGates=false
}


##########################################################################################################
# misc items
#--------------------------------------------------------------------------------------------------------#
# Items that don't fit in any other category.
##########################################################################################################

"misc items" {
    #  [default: true]
    B:enableBeetroot=true

    #  [default: true]
    B:enableIronNugget=false

    #  [default: true]
    B:enableLingeringPotions=true

    #  [default: true]
    B:enableMutton=false

    #  [default: true]
    B:enableNewDyes=false

    # Appears in stronghold corridor and dungeon chests. [default: true]
    B:enableOtherside=true

    # Appears in Nether fortress chest loot. [default: true]
    B:enablePigstep=true

    # If true, vanilla and Et Futurum copper ores will drop raw ore items. [default: true]
    B:enableRawOres=false

    #  [default: true]
    B:enableSuspiciousStew=true

    #  [default: true]
    B:enableTippedArrows=true

    #  [default: true]
    B:enableTotemUndying=true
}


##########################################################################################################
# natural blocks
#--------------------------------------------------------------------------------------------------------#
# Blocks that can generate naturally in your world. Check world.cfg for generation values.
##########################################################################################################

"natural blocks" {
    # Enables tinted glass, amethyst blocks, budding amethyst and amethyst crystals. Also enables the item too. [default: true]
    B:enableAmethyst=true

    # Enables bamboo wood and all of its wood subtypes, including the bamboo stalks themselves. [default: true]
    B:enableBambooBlocks=false

    # This must be on for the basalt deltas biome to generate unless Netherlicious is installed. [default: true]
    B:enableBasalt=false

    #  [default: true]
    B:enableBlueIce=true

    #  [default: true]
    B:enableBoneBlock=true

    #  [default: true]
    B:enableCalcite=true

    # Enables cherry wood and all of its wood subtypes. [default: true]
    B:enableCherryBlocks=true

    # Enables chorus plants and purpur blocks [default: true]
    B:enableChorusBlocks=true

    #  [default: true]
    B:enableCoarseDirt=true

    # Copper ore and copper blocks, variants, and waxed variants. (Slime balls are used if no mod introduces wax and if honey is disabled) [default: true]
    B:enableCopper=true

    #  [default: true]
    B:enableCornflower=true

    #  [default: true]
    B:enableCryingObsidian=true

    #  [default: true]
    B:enableDeepslate=true

    # Enable deepslate ores for copper ore and vanilla ores when deepslate generates over them. [default: true]
    B:enableDeepslateOres=true

    #  [default: true]
    B:enableGrassPath=true

    #  [default: true]
    B:enableLilyOfTheValley=true

    #  [default: true]
    B:enableMagmaBlock=true

    # Enables mud, packed mud and mud bricks, as well as the mud brick stairs, slabs and walls. [default: true]
    B:enableMud=false

    #  [default: true]
    B:enableNetherGold=false

    #  [default: true]
    B:enableNetherite=true

    #  [default: true]
    B:enableNetherwartBlock=true

    #  [default: true]
    B:enablePrismarine=false

    #  [default: true]
    B:enableRedSandstone=true

    # Soul torches and soul lanterns. [default: true]
    B:enableSoulLighting=true

    # Not required for the Soul Sand Valley to generate. [default: true]
    B:enableSoulSoil=true

    # Enable Granite/Andesite/Diorite [default: true]
    B:enableStones=false

    #  [default: true]
    B:enableSweetBerryBushes=true

    #  [default: true]
    B:enableTuff=true

    #  [default: true]
    B:enableWitherRose=true

    # NOTE: Currently the content below is referring to some things which are behind an experimental toggle.
    # Additionally the new nether is NOT compatible with Netherlicious yet. The comment below refers to the plans for when the features below are complete.
    # Set this to false to easily turn off all Nether blocks. This also turns off all Nether biomes because they require the blocks to generate.
    # My biomes have compat with Netherlicious (read world.cfg for more info) but if you don't want any compat or EFR Nether stuff at all turn this off.
    # This disables the following toggles: enableCrimsonBlocks, enableWarpedBlocks, enableBlackstone, enableSoulSoil, enableSoulLighting and enableBasalt.
    # Amethyst geodes use smooth basalt so go to world.cfg to change the outer block to something else or they won't generate.
    # This also turns off Nether wart blocks even though they are older, because Netherlicious also has those. [default: true]
    B:masterNetherToggle=true
}


