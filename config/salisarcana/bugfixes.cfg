# Configuration file

general {
    # Allows players to craft after the wand in the GUI runs out of vis and is recharged by a Vis Charge Relay. [default: true]
    B:arcaneWorkbenchAllowRechargeCrafting=true

    # Fixes ghost items being crafted in the arcane workbench after the wand runs out of vis during a shift-click craft. [default: true]
    B:arcaneWorkbenchGhostItemFix=true

    # Prevents bugs related to multiple players opening an Arcane Workbench's GUI at the same time. [default: true]
    B:arcaneWorkbenchMultiContainer=true

    # Which metadata values of BlockCosmeticSolid are considered beacon base blocks. Default: 4 (Thaumium Block).
    I:beaconBlockMetadataValues <
        4
     >

    # Fixes several crashes with invalid candle metadata [default: true]
    B:candleMetadataCrash=true

    # Adds a safety check in case of a fake player not being castable to EntityPlayerMP. [default: true]
    B:crimsonRitesFakePlayerCheck=true

    # Prevents eldritch crabs, all taintacles, and thaumic slimes from attacking during their death animation. [default: true]
    B:deadMobsDontAttack=true

    # Enable beaconBlockMetadataValues? [default: true]
    B:enableBeaconBlockMetadataValues=true

    # Fixes a bug where you couldn't break blocks if you were holding the equal trade focus item. [default: true]
    B:equalTradeBreaksBlocks=true

    # Fixes several recipes to work with EFR versions of blocks, like trapdoors, if EFR is installed [default: true]
    B:fixEFRRecipes=true

    # Prevents players from putting on conflicting or out-of-order upgrades onto a focus by swapping the focus being modified during the upgrade process. [default: true]
    B:focalManipulatorForbidSwaps=true

    # Fixes a smelting duplication glitch with the Infernal Furnace [default: true]
    B:infernalFurnaceDupeFix=true

    # Calculate infusion stabilizers with integer math instead of floating-point math. This eliminates a rounding error that sometimes makes an infusion altar slightly less stable than it should be. Also corrects a logic error causing the Infusion Matrix to check the wrong coordinates for a symmetrical stabilizer. [default: true]
    B:integerInfusionMatrixMath=true

    # Add a safety check to several Thaumcraft items to prevent crashes when creating those items with invalid metadata. [default: true]
    B:itemMetadataFix=true

    # Fixes a theoretical bug where, if billions of bosses were spawned, only the golem boss would be able to spawn. [default: true]
    B:negativeBossSpawnCount=true

    # Unloaded nodes will regenerate based on game time, not real life time. [default: true]
    B:nodesRechargeInGameTime=true

    # Nodes will remember being drained, preventing rapidly loading, draining, then unloading nodes exploiting nodes' catch-up recharging. [default: true]
    B:nodesRememberBeingDrained=true

    # Fixes an issue with ores where they don't get rendered as normal blocks, not allowing you to push a redstone signal through them. [default: true]
    B:renderRedstoneFix=true

    # Fixes a crash with invalid shard metadata [default: true]
    B:shardMetadataCrash=true

    # Reduce the burn time of Thaumcraft's greatwood and silverwood slabs to match that of Minecraft's wooden slabs. [default: true]
    B:slabBurnTimeFix=true

    # Fixes a graphical error where focus effects would appear below the tip of a staff. [default: true]
    B:staffFocusEffectFix=true

    # Check the infusion matrix's center item more strictly. Prevents an exploit with infusion enchanting. [default: true]
    B:strictInfusionMatrixInputChecks=true

    # Remove gold coins from the gold nugget ore dictionary. [default: false]
    B:unOredictGoldCoin=false

    # Use Forge's fishing lists to determine what a fishing golem catches. [default: true]
    B:useForgeFishingLists=true

    # Adds a safety check to prevent warp effects from trying to send packets to fake players. [default: true]
    B:warpFakePlayerCheck=true
}


