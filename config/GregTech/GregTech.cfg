# Configuration file

gregtech {

    ##########################################################################################################
    # debug
    #--------------------------------------------------------------------------------------------------------#
    # Debug section
    ##########################################################################################################

    debug {
        # enable D1 flag (a set of debug logs) [default: false]
        B:D1=false

        # enable D2 flag (another set of debug logs) [default: false]
        B:D2=false

        # This will prevent NEI from crashing but spams the Log. [default: false]
        B:allowBrokenRecipeMap=false

        # Debug parameter for single block miner. [default: false]
        B:debugBlockMiner=false

        # Debug parameter for single block pump. [default: false]
        B:debugBlockPump=false

        # Debug parameter for chunk loaders. [default: false]
        B:debugChunkloaders=false

        # Debug parameters for cleanroom testing. [default: false]
        B:debugCleanroom=false

        # Debug parameter for driller testing. [default: false]
        B:debugDriller=false

        # Debug parameter for entity cramming reduction. [default: false]
        B:debugEntityCramming=false

        # Debug parameter for orevein generation. [default: false]
        B:debugOrevein=false

        # Debug parameter for small ore generation. [default: false]
        B:debugSmallOres=false

        # Debug parameter for stones generation. [default: false]
        B:debugStones=false

        # Debug parameter for gregtech.api.util.GT_ChunkAssociatedData [default: false]
        B:debugWorldData=false

        # Debug parameter for world generation. Tracks chunks added/removed from run queue. [default: false]
        B:debugWorldgen=false
    }

    ##########################################################################################################
    # features
    #--------------------------------------------------------------------------------------------------------#
    # Features section
    ##########################################################################################################

    features {
        # Controls the stacksize of tree related blocks. [range: -2147483648 ~ 2147483647, default: 64]
        I:maxLogStackSize=64

        # Controls the stacksize of oredicted items used in ore treatment. [range: -2147483648 ~ 2147483647, default: 64]
        I:maxOreStackSize=64

        # Controls the stacksize of every oredicted prefix based items used for blocks (if that even makes sense) [range: -2147483648 ~ 2147483647, default: 64]
        I:maxOtherBlocksStackSize=64

        # Controls the stacksize of oredicted planks. [range: -2147483648 ~ 2147483647, default: 64]
        I:maxPlankStackSize=64

        # Controls the stacksize of IC2 overclocker upgrades. [range: -2147483648 ~ 2147483647, default: 4]
        I:upgradeStackSize=4
    }

    ##########################################################################################################
    # general
    #--------------------------------------------------------------------------------------------------------#
    # General section
    ##########################################################################################################

    general {
        # This will set the blacklist of blocks for CTM blocks. [default: [team.chisel.block.BlockRoadLine]]
        S:CTMBlacklist <
            team.chisel.block.BlockRoadLine
         >

        # This will set the whitelist of blocks for CTM blocks. [default: [team.chisel.block.BlockCarvable], [team.chisel.block.BlockCarvableGlass]]
        S:CTMWhitelist <
            team.chisel.block.BlockCarvable
            team.chisel.block.BlockCarvableGlass
         >

        # if true, enables GT5U and GT++ bees. [default: true]
        B:GTBees=true

        # if true, enables GT5U achievements. [default: true]
        B:achievements=true

        # If true, allows small boiler automation. [default: false]
        B:allowSmallBoilerAutomation=false

        # if yes, allows the automatic interactions with the maintenance hatches. [default: true]
        B:autoMaintenaceHatchesInteraction=true

        # If true, spawns an axe at the start in adventure mode. Does nothing if the advanture mode isn't forced. [default: true]
        B:axeWhenAdventure=true

        # if true, change the default durability of wooden vanilla tools to 64 and increase speed to match stone [default: true]
        B:changedWoodenVanillaTools=true

        # if true, wires will require soldering material to be connected. [default: false]
        B:costlyCableConnection=false

        # if true, enables crafting unification. [default: true]
        B:craftingUnification=true

        # if true, crashes on null recipe input. [default: true]
        B:crashOnNullRecipeInput=true

        # if true, crops need a block below to fully grow. [default: true]
        B:cropNeedBlock=true

        # if true, shows all the metaitems in creative and in NEI. [default: false]
        B:doShowAllItemsInCreative=false

        # If true, all the GT5U potions are always drinkable. [default: true]
        B:drinksAlwaysDrinkable=true

        # if true, enables all the materials in GT5U. [default: false]
        B:enableAllMaterials=false

        # if true, enables the cleanroom multi. [default: true]
        B:enableCleanroom=true

        # if true, end ores yield twice as much as normal ores. [default: true]
        B:endOreYieldMultiplier=true

        # if true, drops the content of the machine inventory before exploding. [default: false]
        B:explosionItemDrop=false

        # The chance of success to start a fire from the flint and steel. [range: -2147483648 ~ 2147483647, default: 30]
        I:flintChance=30

        # if true, enables GT6 styled wire connections. [default: true]
        B:gt6Cable=true

        # if true, enables GT6 styled pipe connections. [default: true]
        B:gt6Pipe=true

        # if true, sets the hardness of the mobspawers to 500 and their blast resistance to 6 000 000. [default: true]
        B:harderMobSpawner=true

        # if true, hides unused ores. [default: false]
        B:hideUnusedOres=false

        # If true, hungers the players based on his amount of stuff in the inventory every 6s, regardless of player movement. [default: false]
        B:hungerEffect=false

        # if true, enable placeholder for material names in lang file. [default: true]
        B:i18nPlaceholder=true

        # if true, allows GT5U cables to be IC2 power sources. [default: true]
        B:ic2EnergySourceCompat=true

        # If true, increases dungeon loots in vanilla structures. [default: false]
        B:increaseDungeonLoot=false

        # If true, enables the item oredification of the items in the inventory. [default: true]
        B:inventoryUnification=true

        # Entity despawn time. [range: -2147483648 ~ 2147483647, default: 6000]
        I:itemDespawnTime=6000

        # if true, logs all the explosions in logs/Explosion.log. [default: true]
        B:loggingExplosions=true

        # if true, logs all the oredict in logs/OreDict.log. [default: false]
        B:loggingOreDict=false

        # if true, enables low gravity requirement in some crafts. Is forced to false if GalactiCraft is not present. [default: true]
        B:lowGravProcessing=true

        # Max entity amount in the same block for entity craming. [range: -2147483648 ~ 2147483647, default: 6]
        I:maxEqualEntitiesAtOneSpot=6

        # Controls the threshold (in ms) above which a lag warning is issued in log for a specific tile entity. [range: -2147483648 ~ 2147483647, default: 100]
        I:millisecondThesholdUntilLagWarning=100

        # Controls the minimum distance allowed for the long distance pipelines to form. [range: -2147483648 ~ 2147483647, default: 64]
        I:minimalDistancePoints=64

        # if true, mixed ores only yields the equivalent of 2/3 of the pure ores. [default: false]
        B:mixedOreOnlyYieldsTwoThirdsOfPureOre=false

        # if true, makes the GT5U sounds multi-threaded. [default: false]
        B:multiThreadedSounds=false

        # If true, nerfs planks recipes. [default: true]
        B:nerfedWoodPlank=true

        # if true, nether ores yield twice as much as normal ores. [default: true]
        B:netherOreYieldMultiplier=true

        # Control number of attempts to find a valid orevein. Generally this maximum limit isn't hit, selecting a vein is cheap [range: -2147483648 ~ 2147483647, default: 64]
        I:oreveinAttempts=64

        # Control number of attempts to place a valid ore vein. If a vein wasn't placed due to height restrictions, completely in the water, etc, another attempt is tried. [range: -2147483648 ~ 2147483647, default: 8]
        I:oreveinMaxPlacementAttempts=8

        # Control percentage of filled 3x3 chunks. Lower number means less oreveins spawn. [range: -2147483648 ~ 2147483647, default: 100]
        I:oreveinPercentage=100

        # Whether to place small ores as placer ores for an orevein. [default: true]
        B:oreveinPlacerOres=true

        # Multiplier to control how many placer ores get generated. [range: -2147483648 ~ 2147483647, default: 2]
        I:oreveinPlacerOresMultiplier=2

        # if true, rich ores yield twice as much as normal ores. [default: true]
        B:richOreYieldMultiplier=true

        # If true, forces the survival map into adventure mode. [default: false]
        B:survivalIntoAdventure=false

        # Controls the amount of tick over the lag averaging is done with the scanner. [range: -2147483648 ~ 2147483647, default: 25]
        I:ticksForLagAveraging=25

        # If true, enables the timber axe (cuts down whole tree in a single hit). [default: false]
        B:timber=false
    }

    ##########################################################################################################
    # harvestlevel
    #--------------------------------------------------------------------------------------------------------#
    # Harvest level section
    ##########################################################################################################

    harvestlevel {
        # Activate Harvest Level Change [default: false]
        B:activateHarvestLevelChange=false

        # GraniteHarvestLevel harvest level [range: -2147483648 ~ 2147483647, default: 3]
        I:graniteHarvestLevel=3

        # Maximum harvest level [range: -2147483648 ~ 2147483647, default: 7]
        I:maxHarvestLevel=7
    }

    ##########################################################################################################
    # machines
    #--------------------------------------------------------------------------------------------------------#
    # Machines section
    ##########################################################################################################

    machines {
        # This will make all chunkloading machines act as World Anchors (true) or Passive Anchors (false). [default: false]
        B:alwaysReloadChunkloaders=false

        # This will set the blacklist for the world accelerator in TE mode. [default: [com.rwtema.extrautils.tileentity.enderquarry.TileEntityEnderQuarry], [advsolar.common.tiles.TileEntityUltimateSolarPanel], [advsolar.common.tiles.TileEntitySolarPanel], [advsolar.common.tiles.TileEntityQuantumSolarPanel], [advsolar.common.tiles.TileEntityHybridSolarPanel], [advsolar.common.tiles.TileEntityAdvancedSolarPanel], [com.supsolpans.tiles.TileAdminSolarPanel], [com.supsolpans.tiles.TilePhotonicSolarPanel], [com.supsolpans.tiles.TileSingularSolarPanel], [com.supsolpans.tiles.TileSpectralSolarPanel], [emt.tile.solar.air.TileEntityAirSolar], [emt.tile.solar.air.TileEntityDoubleAirSolar], [emt.tile.solar.air.TileEntityTripleAirSolar], [emt.tile.solar.air.TileEntityQuadrupleAirSolar], [emt.tile.solar.air.TileEntityQuintupleAirSolar], [emt.tile.solar.air.TileEntitySextupleAirSolar], [emt.tile.solar.air.TileEntitySeptupleAirSolar], [emt.tile.solar.air.TileEntityOctupleAirSolar], [emt.tile.solar.compressed.TileEntityCompressedSolar], [emt.tile.solar.compressed.TileEntityDoubleCompressedSolar], [emt.tile.solar.compressed.TileEntityTripleCompressedSolar], [emt.tile.solar.compressed.TileEntityQuadrupleAirSolar], [emt.tile.solar.compressed.TileEntityQuintupleAirSolar], [emt.tile.solar.compressed.TileEntitySextupleAirSolar], [emt.tile.solar.compressed.TileEntitySeptupleAirSolar], [emt.tile.solar.compressed.TileEntityOctupleAirSolar], [emt.tile.solar.dark.TileEntityDarkSolar], [emt.tile.solar.dark.TileEntityDoubleDarkSolar], [emt.tile.solar.dark.TileEntityTripleDarkSolar], [emt.tile.solar.dark.TileEntityQuadrupleAirSolar], [emt.tile.solar.dark.TileEntityQuintupleAirSolar], [emt.tile.solar.dark.TileEntitySextupleAirSolar], [emt.tile.solar.dark.TileEntitySeptupleAirSolar], [emt.tile.solar.dark.TileEntityOctupleAirSolar], [emt.tile.solar.earth.TileEntityDoubleEarthSolar], [emt.tile.solar.earth.TileEntityEarthSolar], [emt.tile.solar.earth.TileEntityTripleEarthSolar], [emt.tile.solar.earth.TileEntityQuadrupleAirSolar], [emt.tile.solar.earth.TileEntityQuintupleAirSolar], [emt.tile.solar.earth.TileEntitySextupleAirSolar], [emt.tile.solar.earth.TileEntitySeptupleAirSolar], [emt.tile.solar.earth.TileEntityOctupleAirSolar], [emt.tile.solar.fire.TileEntityDoubleFireSolar], [emt.tile.solar.fire.TileEntityFireSolar], [emt.tile.solar.fire.TileEntityTripleFireSolar], [emt.tile.solar.fire.TileEntityQuadrupleAirSolar], [emt.tile.solar.fire.TileEntityQuintupleAirSolar], [emt.tile.solar.fire.TileEntitySextupleAirSolar], [emt.tile.solar.fire.TileEntitySeptupleAirSolar], [emt.tile.solar.fire.TileEntityOctupleAirSolar], [emt.tile.solar.order.TileEntityDoubleOrderSolar], [emt.tile.solar.order.TileEntityOrderSolar], [emt.tile.solar.order.TileEntityTripleOrderSolar], [emt.tile.solar.order.TileEntityQuadrupleAirSolar], [emt.tile.solar.order.TileEntityQuintupleAirSolar], [emt.tile.solar.order.TileEntitySextupleAirSolar], [emt.tile.solar.order.TileEntitySeptupleAirSolar], [emt.tile.solar.order.TileEntityOctupleAirSolar], [emt.tile.solar.water.TileEntityDoubleWaterSolar], [emt.tile.solar.water.TileEntityTripleWaterSolar], [emt.tile.solar.water.TileEntityWaterSolar], [emt.tile.solar.water.TileEntityQuadrupleAirSolar], [emt.tile.solar.water.TileEntityQuintupleAirSolar], [emt.tile.solar.water.TileEntitySextupleAirSolar], [emt.tile.solar.water.TileEntitySeptupleAirSolar], [emt.tile.solar.water.TileEntityOctupleAirSolar], [com.lulan.compactkineticgenerators.tileentity.TileCkgE], [com.lulan.compactkineticgenerators.tileentity.TileCkgH], [com.lulan.compactkineticgenerators.tileentity.TileCkgL], [com.lulan.compactkineticgenerators.tileentity.TileCkgM], [com.lulan.compactkineticgenerators.tileentity.TileCkwaE], [com.lulan.compactkineticgenerators.tileentity.TileCkwaH], [com.lulan.compactkineticgenerators.tileentity.TileCkwaL], [com.lulan.compactkineticgenerators.tileentity.TileCkwaM], [com.lulan.compactkineticgenerators.tileentity.TileCkwmE], [com.lulan.compactkineticgenerators.tileentity.TileCkwmH], [com.lulan.compactkineticgenerators.tileentity.TileCkwmL], [com.lulan.compactkineticgenerators.tileentity.TileCkwmM], [com.supsolpans.tiles.TileSpectralSolarPanel], [com.supsolpans.tiles.TileSingularSolarPanel], [com.supsolpans.tiles.TileAdminSolarPanel], [com.supsolpans.tiles.TilePhotonicSolarPanel], [gtPlusPlus.core.tileentities.general.TileEntityFishTrap], [gtPlusPlus.core.tileentities.general.TileEntityDecayablesChest], [net.bdew.gendustry.machines.apiary.TileApiary], [goodgenerator.blocks.tileEntity.EssentiaHatch], [magicbees.tileentity.TileEntityApimancersDrainerCommon], [magicbees.tileentity.TileEntityApimancersDrainerGT]]
        S:blacklistedTileEntiyClassNamesForWA <
            com.rwtema.extrautils.tileentity.enderquarry.TileEntityEnderQuarry
            advsolar.common.tiles.TileEntityUltimateSolarPanel
            advsolar.common.tiles.TileEntitySolarPanel
            advsolar.common.tiles.TileEntityQuantumSolarPanel
            advsolar.common.tiles.TileEntityHybridSolarPanel
            advsolar.common.tiles.TileEntityAdvancedSolarPanel
            com.supsolpans.tiles.TileAdminSolarPanel
            com.supsolpans.tiles.TilePhotonicSolarPanel
            com.supsolpans.tiles.TileSingularSolarPanel
            com.supsolpans.tiles.TileSpectralSolarPanel
            emt.tile.solar.air.TileEntityAirSolar
            emt.tile.solar.air.TileEntityDoubleAirSolar
            emt.tile.solar.air.TileEntityTripleAirSolar
            emt.tile.solar.air.TileEntityQuadrupleAirSolar
            emt.tile.solar.air.TileEntityQuintupleAirSolar
            emt.tile.solar.air.TileEntitySextupleAirSolar
            emt.tile.solar.air.TileEntitySeptupleAirSolar
            emt.tile.solar.air.TileEntityOctupleAirSolar
            emt.tile.solar.compressed.TileEntityCompressedSolar
            emt.tile.solar.compressed.TileEntityDoubleCompressedSolar
            emt.tile.solar.compressed.TileEntityTripleCompressedSolar
            emt.tile.solar.compressed.TileEntityQuadrupleAirSolar
            emt.tile.solar.compressed.TileEntityQuintupleAirSolar
            emt.tile.solar.compressed.TileEntitySextupleAirSolar
            emt.tile.solar.compressed.TileEntitySeptupleAirSolar
            emt.tile.solar.compressed.TileEntityOctupleAirSolar
            emt.tile.solar.dark.TileEntityDarkSolar
            emt.tile.solar.dark.TileEntityDoubleDarkSolar
            emt.tile.solar.dark.TileEntityTripleDarkSolar
            emt.tile.solar.dark.TileEntityQuadrupleAirSolar
            emt.tile.solar.dark.TileEntityQuintupleAirSolar
            emt.tile.solar.dark.TileEntitySextupleAirSolar
            emt.tile.solar.dark.TileEntitySeptupleAirSolar
            emt.tile.solar.dark.TileEntityOctupleAirSolar
            emt.tile.solar.earth.TileEntityDoubleEarthSolar
            emt.tile.solar.earth.TileEntityEarthSolar
            emt.tile.solar.earth.TileEntityTripleEarthSolar
            emt.tile.solar.earth.TileEntityQuadrupleAirSolar
            emt.tile.solar.earth.TileEntityQuintupleAirSolar
            emt.tile.solar.earth.TileEntitySextupleAirSolar
            emt.tile.solar.earth.TileEntitySeptupleAirSolar
            emt.tile.solar.earth.TileEntityOctupleAirSolar
            emt.tile.solar.fire.TileEntityDoubleFireSolar
            emt.tile.solar.fire.TileEntityFireSolar
            emt.tile.solar.fire.TileEntityTripleFireSolar
            emt.tile.solar.fire.TileEntityQuadrupleAirSolar
            emt.tile.solar.fire.TileEntityQuintupleAirSolar
            emt.tile.solar.fire.TileEntitySextupleAirSolar
            emt.tile.solar.fire.TileEntitySeptupleAirSolar
            emt.tile.solar.fire.TileEntityOctupleAirSolar
            emt.tile.solar.order.TileEntityDoubleOrderSolar
            emt.tile.solar.order.TileEntityOrderSolar
            emt.tile.solar.order.TileEntityTripleOrderSolar
            emt.tile.solar.order.TileEntityQuadrupleAirSolar
            emt.tile.solar.order.TileEntityQuintupleAirSolar
            emt.tile.solar.order.TileEntitySextupleAirSolar
            emt.tile.solar.order.TileEntitySeptupleAirSolar
            emt.tile.solar.order.TileEntityOctupleAirSolar
            emt.tile.solar.water.TileEntityDoubleWaterSolar
            emt.tile.solar.water.TileEntityTripleWaterSolar
            emt.tile.solar.water.TileEntityWaterSolar
            emt.tile.solar.water.TileEntityQuadrupleAirSolar
            emt.tile.solar.water.TileEntityQuintupleAirSolar
            emt.tile.solar.water.TileEntitySextupleAirSolar
            emt.tile.solar.water.TileEntitySeptupleAirSolar
            emt.tile.solar.water.TileEntityOctupleAirSolar
            com.lulan.compactkineticgenerators.tileentity.TileCkgE
            com.lulan.compactkineticgenerators.tileentity.TileCkgH
            com.lulan.compactkineticgenerators.tileentity.TileCkgL
            com.lulan.compactkineticgenerators.tileentity.TileCkgM
            com.lulan.compactkineticgenerators.tileentity.TileCkwaE
            com.lulan.compactkineticgenerators.tileentity.TileCkwaH
            com.lulan.compactkineticgenerators.tileentity.TileCkwaL
            com.lulan.compactkineticgenerators.tileentity.TileCkwaM
            com.lulan.compactkineticgenerators.tileentity.TileCkwmE
            com.lulan.compactkineticgenerators.tileentity.TileCkwmH
            com.lulan.compactkineticgenerators.tileentity.TileCkwmL
            com.lulan.compactkineticgenerators.tileentity.TileCkwmM
            com.supsolpans.tiles.TileSpectralSolarPanel
            com.supsolpans.tiles.TileSingularSolarPanel
            com.supsolpans.tiles.TileAdminSolarPanel
            com.supsolpans.tiles.TilePhotonicSolarPanel
            gtPlusPlus.core.tileentities.general.TileEntityFishTrap
            gtPlusPlus.core.tileentities.general.TileEntityDecayablesChest
            net.bdew.gendustry.machines.apiary.TileApiary
            goodgenerator.blocks.tileEntity.EssentiaHatch
            magicbees.tileentity.TileEntityApimancersDrainerCommon
            magicbees.tileentity.TileEntityApimancersDrainerGT
         >

        # This will set the percentage how much ReinforcedGlass is Allowed in Cleanroom Walls. [range: 1.4E-45 ~ 3.4028235E38, default: 5.0]
        S:cleanroomGlass=5.0

        # If true, enable the guis of the machines to get a tint and it will be of the color of the dye applied to the machine. [default: true]
        B:coloredGUI=true

        # If true, then digital chest with AE2 storage bus will be accessible only through AE2 [default: false]
        B:disableDigitalChestsExternalAccess=false

        # This will let machines such as drills and pumps chunkload their work area. [default: true]
        B:enableChunkloaders=true

        # If true, machines can explode. [default: true]
        B:machineExplosions=true

        # If true, machine will randomly explode if there is fire on adjacent blocks. [default: true]
        B:machineFireExplosions=true

        # If true, machine can take fire. [default: true]
        B:machineFlammable=true

        # If true and if the machine tint is activated, the guis will have a uniform metallic tint no matter what color is applied to the machines. [default: false]
        B:machineMetalGUI=false

        # If true, explodes if the machine is dismantled without a wrench. [default: true]
        B:machineNonWrenchExplosions=true

        # If true, will randomly explode if it is raining. [default: true]
        B:machineRainExplosions=true

        # If true, will randomly explode during thunderstorm if the machine can be exposed to rain. [default: true]
        B:machineThunderExplosions=true

        # If true, burn the wires on explosion. (by sending IV amps into the cables) [default: true]
        B:machineWireFire=true

        # Number of ticks between sending sound packets to clients for electric machines. Default is 1.5 seconds. Trying to mitigate lag and FPS drops. [range: -2147483648 ~ 2147483647, default: 30]
        I:ticksBetweenSounds=30

        # If true, use the definition of the metallic tint in GT5U, otherwise NHCore will set it to white. [default: true]
        B:useMachineMetal=true
    }

    ##########################################################################################################
    # oredropbehavior
    #--------------------------------------------------------------------------------------------------------#
    # Ore drop behavior section
    ##########################################################################################################

    oredropbehavior {
        # Settings:
        #  - 'PerDimBlock': Sets the drop to the block variant of the ore block based on dimension, defaults to stone type
        #  - 'UnifiedBlock': Sets the drop to the stone variant of the ore block
        #  - 'Block': Sets the drop to the ore  mined
        #  - 'FortuneItem': Sets the drop to the new ore item and makes it affected by fortune - 'Item': Sets the drop to the new ore item
        # Possible values: [Block, PerDimBlock, UnifiedBlock, FortuneItem, Item]
        #  [default: FortuneItem]
        S:setting=FortuneItem
    }

}


